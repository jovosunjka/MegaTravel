template header
logCount
timeCount
timeUnit
hostRelation
sourceRelation
loginSuccess

package loginrules;

import com.bsep_sbz.SIEMCenter.model.sbz.enums.log.LogCategory
import com.bsep_sbz.SIEMCenter.model.sbz.log.Alarm;
import com.bsep_sbz.SIEMCenter.model.sbz.log.Log;

template "login_attempt"

rule "Login attempt rule_@{row.rowNumber}"
    when
        $log: Log($s: source, $h: hostAddress, category == LogCategory.LOGIN,
            message.contains("login_successful:@{loginSuccess}")) and
        Number(intValue >= @{logCount}) from accumulate(
                       $l: Log(
                           hostAddress @{hostRelation} $h,
                           source @{sourceRelation} $s,
                           category == LogCategory.LOGIN,
                           message.contains("login_successful:@{loginSuccess}")
                       ) over window:time(@{timeCount}@{timeUnit}),
                       count($l)
                   )
    then
        Alarm alarm = new Alarm();
        alarm.setMessage("Login attempt rule_@{row.rowNumber}");
        alarm.getLogs().add($log);
        insert(alarm);
        System.out.println("Login attempt rule_@{row.rowNumber}");
end

end template