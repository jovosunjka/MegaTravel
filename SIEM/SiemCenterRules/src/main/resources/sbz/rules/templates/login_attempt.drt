template header
loginAttemptCount
timeCount
timeUnit
hostRelation
sourceRelation
type
loginTemplateNumber

package sbz.rules;

import com.bsep_sbz.SIEMCenter.model.sbz.enums.log.LogCategory;
import com.bsep_sbz.SIEMCenter.model.sbz.enums.log.LogLevel;
import com.bsep_sbz.SIEMCenter.model.sbz.log.Alarm;
import com.bsep_sbz.SIEMCenter.model.sbz.log.Log;

template "login_attempt"

rule "Login attempt rule_@{loginTemplateNumber}"
    salience 100
    agenda-group "app"
    when
        exists(
            $log: Log($s: source, $h: hostAddress, $t: type == LogLevel.@{type}, $c: category == LogCategory.LOGIN) and
            Number(intValue >= @{loginAttemptCount}) from accumulate(
                       $l: Log(
                           this == $log || hostAddress @{hostRelation} $h,
                           this == $log || source @{sourceRelation} $s,
                           category == $c,
                           type == $t
                       ) over window:time(@{timeCount}@{timeUnit}),
                       count($l)
                   )
              )
    then
        Alarm alarm = new Alarm();
        alarm.setAlarmProducerType(LogCategory.LOGIN);
        alarm.setMessage("Login attempt rule_@{loginTemplateNumber}");
        insert(alarm);
end

end template

