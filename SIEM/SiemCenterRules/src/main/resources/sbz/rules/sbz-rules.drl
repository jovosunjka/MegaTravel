package sbz.rules;

import com.bsep_sbz.SIEMCenter.model.sbz.log.Log;
import com.bsep_sbz.SIEMCenter.model.sbz.enums.log.LogLevel;
import com.bsep_sbz.SIEMCenter.model.sbz.enums.log.LogCategory;
import com.bsep_sbz.SIEMCenter.model.sbz.enums.log.AlarmProducerType;
import java.lang.Number;
import com.bsep_sbz.SIEMCenter.model.sbz.log.Alarm;

query "Get all alarms"
    $a: Alarm()
end

// Neuspešni pokušaji prijave na sistem na istoj mašini. Prijava može biti na nivou
// operativnog sistema ili na nivou simuliranog informacionog sistema
// mradovic: Put all logs in alarm ???
// WARNING: This rule is executed for every log with given settings ! Needs to be executed only once?
rule "Neuspesni pokusaji prijave na sistem na istoj masini 2+"
    when
        $log: Log($id: id, type == LogLevel.WARN, category == LogCategory.LOGIN, $ha: hostAddress) and
        Number(intValue >= 2) from accumulate(
                        $l: Log(
                            id != $id,
                            type == LogLevel.WARN,
                            category == LogCategory.LOGIN,
                            hostAddress == $ha,
                            message.contains("login_successful:false")
                        ),
                        count($l)
                    )
    then
        System.out.println("Neuspesno logovanje na istu masinu");
        Alarm alarm = new Alarm();
        alarm.setAlarmProducerType(AlarmProducerType.LOGIN);
        alarm.getLogs().add($log);
        alarm.setMessage("Neuspesni pokusaji prijave na sistem na istoj masini 2+");
        insert(alarm);
end

// Neuspešni pokušaji prijave na sistem sa istim korisničkim imenom. Prijava može biti na nivou
// operativnog sistema na ili nivou simuliranog informacionog sistema
rule "Neuspesni pokusaji prijave sa istim username-om 2+"
    when
        $log: Log($id: id, type == LogLevel.WARN, category == LogCategory.LOGIN, $s: source) and // source je u ovom slucaju username
        Number(intValue >= 2) from accumulate(
                        $l: Log(
                            id != $id,
                            type == LogLevel.WARN,
                            category == LogCategory.LOGIN,
                            source == $s,
                            message.contains("login_successful:false")
                        ),
                        count($l)
                    )
    then
        System.out.println("Neuspesno logovanje sa istim username-om");
        Alarm alarm = new Alarm();
        alarm.setAlarmProducerType(AlarmProducerType.LOGIN);
        alarm.getLogs().add($log);
        alarm.setMessage("Neuspesni pokusaji prijave sa istim username-om 2+");
        insert(alarm);
end

// Pokušaj prijave na nalog koji nije bio aktivan 90 ili više dana
// mradovic: WARNING: Po ovoj implementaciji login log od pre 90 dana bi trebao biti u radnoj memoriji !!!
rule "Pokusaj prijave na nalog koji nije bio aktivan 90+ dana"
    when
        $l: Log(category == LogCategory.LOGIN, $s: source, $ts: timestamp) // source je u ovom slucaju username
        Number(Log.getDaysOfInactivity(longValue, $ts.getTime()) >= 90) from accumulate(
                                    Log(
                                        category == LogCategory.LOGIN,
                                        source == $s,
                                        timestamp != $ts,
                                        $ts2: timestamp //,
                                        //message.contains("login_successfull:false")
                                    ),
                                    max($ts2.getTime())
                                )
    then
        System.out.println("90+ days of inactivity");
        Alarm alarm = new Alarm();
        alarm.setAlarmProducerType(AlarmProducerType.LOGIN);
        alarm.getLogs().add($l);
        alarm.setMessage("Pokusaj prijave na nalog koji nije bio aktivan 90+ dana");
        insert(alarm);
end

/*rule "Pojava loga u kome antivirus registruje pretnju, a da u roku od 1h se ne generise log o uspesnom eliminisanju pretnje"
    when
            $al: AntivirusLog(logLevel == LogLevel.ERROR, $ts: timestamp)
            AntivirusLog(logLevel == LogLevel.INFO, relatedLog != null, relatedLog == $al , AntivirusLog.diffrenceInHours($al.timestamp, timestamp) <= 1 )

    then
        System.out.println("Nije se generisao log o uspesnom eliminisanju pretnje");
end*/