keycloak.auth-server-url=https://localhost:8444/auth
keycloak.realm=demo
keycloak.resource=siemcenter-app
keycloak.public-client=true
keycloak.ssl-required=external
keycloak.cors=true
keycloak.bearer-only=true

# Ovo je zapravo public key naseg realm-a (demo). Nasao sam ga u Realm Settings, tab Keys, pod-tab Active.
# Za type RSA, skroz desno ima da se klikne na Public key ili Certificate.
# Kad se klikne na Public key, otvori ce se jedan mali oblacic u kome ce pisati Public key naseg realm-a.
# Njega treba prekopirati i ovde upisati. BEZ OVOGA NECE RADITI!!!
# https://stackoverflow.com/questions/45562720/securing-spring-boot-service-with-keycloak-jwt-token
keycloak.realmKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAh8VUw4IOP6/tIxjQrwD2NdDMs6cz7qN0xRYlEcn65t6S8l0WoqDIevxE38UCwar4h0RLwey/LrGLpRzMD90CMa8EKSaxZH/sNwTmF3PQg8p+khSNQyGS9yKxYWmEiVeCSlP9ZQcc6Vkez/7vTxW9Y/ZMNJ60LodTh7B4thWEepCZMpboWixKkSAhILaZoBgyPnvG8xqudwtst2it7cbBRBe94ddJrsnVmg7KmbRr4GdEeASLD6mn9zI0Wp/anMm7YGaZTPdsVCKhkM+Y2npQHsiTGPAVS6Hw/C80K/nLnt1YgTH6h/rDDdzyc6UBGCF6JOpqFByFp4eT9mhjFt0lowIDAQAB 






server.port=8081
server.servlet.context-path=/api

#server.ssl.enabled=true
#server.ssl.client-auth=need
#server.ssl.enabled-protocols=TLSv1.2

server.ssl.key-store=classpath:stores/keystore.jks
server.ssl.key-store-password=key_store_pass

server.ssl.key-store-type=JKS
server.ssl.key-alias=megatravelsiemcenter
server.ssl.trust-store=classpath:stores/truststore.jks
server.ssl.trust-store-password=trust_store_pass
server.ssl.trust-store-type=JKS


ca-url=https://localhost:8443/pki/certificate/create
my-url=https://localhost:8081/api/certificate/send-request


ftp.host=localhost
ftp.port=2121
ftp.passive-ports=
ftp.max-login=0
ftp.max-threads=0
ftp.username=siem_center_ftp
ftp.password=siem_center_ftp_pass
ftp.home-dir=classpath:stores
#ftp.home-dir=classpath:aaa


# H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
# Datasource
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#Bez ovoga nece da izvrsi insert naredbe iz data.sql fajla koji se nalazi u /main/resources
#spring.datasource.initialization-mode=always

# FOR MYSQL DATABASE
#-------------------

#Spring DataSource
spring.datasource.url = jdbc:mysql://localhost:3306/bsep_sbz?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username =root
spring.datasource.password =mysqlroot
#korisno ako je konekcija dugo u idle stanju
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#JPA-Hibernate
#pring.jpa.show-sql = true
#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
spring.jpa.hibernate.ddl-auto=update
#bira najbolje konvencije imenovanja za tabele i polja u bazi
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# ako zelimo da vidimo sql naredbe u konzoli
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# PAZNJA!!! PAZNJA!!! PAZNJA!!! PAZNJA!!! PAZNJA!!!
# PAZNJA!!! PAZNJA!!! PAZNJA!!! PAZNJA!!! PAZNJA!!!
# PAZNJA!!! PAZNJA!!! PAZNJA!!! PAZNJA!!! PAZNJA!!!
# ZA NEKE SLUCAJEVE NIJE RADIO @Rollback PRILIKOM TESTIRANJA. KADA SAM STAVIO MySQL5InnoDBDialect RADI ZA SVE
#optimizacija za mysql upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
